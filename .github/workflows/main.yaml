name: Terraform Development CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "sadcloud/**"
      - ".github/workflows/main.yaml"

env:
  TF_WORKING_DIR: "sadcloud"
  S3_CLOUD_CUSTODIAN_BUCKET_NAME: "diraht-sadcloud-cloud-custodian"
  AWS_REGION: "us-east-1"

jobs:
  terraform:
    name: "Terraform and Cloud Custodian"
    permissions:
      contents: "read"
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.0"

      - name: Debug working directory
        run: |
          pwd
          ls -la

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install Cloud Custodian, c7n-mailer, and dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install c7n c7n-mailer

      - name: Update c7n-mailer Lambda
        run: c7n-mailer --config mailer.yaml --update-lambda

      - name: Run Cloud Custodian Policies
        run: |
          cd "${{ env.TF_WORKING_DIR }}"
          custodian run -s . custodian-policies.yaml

      - name: Upload Custodian Logs to S3
        if: always()
        run: |
          cd "${{ env.TF_WORKING_DIR }}"
          if [ -d "output" ]; then
            aws s3 cp output s3://${{ env.S3_CLOUD_CUSTODIAN_BUCKET_NAME }}/custodian-logs/$(date +%Y-%m-%d)/ --recursive
          else
            echo "No Cloud Custodian output directory found"
          fi
